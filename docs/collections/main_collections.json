{
	"info": {
		"_postman_id": "cb77579b-7c72-4d7b-9279-b545e586b9af",
		"name": "ST Server Gateway",
		"description": "In the \"Journal\" section, the endpoints allow for the creation of new journal entries, viewing of individual or all journal entries, editing existing journal entries, and deletion of one or multiple journal entries at once.\n\nThe \"Trade\" section offers a similar set of functionalities but is focused on trade records. It includes endpoints for adding new trade records, viewing all trades or a single trade's details, editing trades, and deleting multiple trade records simultaneously.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18112029"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "LogIn",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"if (jsonData.data && jsonData.data.token) {",
									"    pm.environment.set(\"auth_token\", jsonData.data.token);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"luis@gimenez.com\",\n    \"password\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}:{{port}}/{{v}}/auth/login",
							"host": [
								"{{url}}"
							],
							"port": "{{port}}",
							"path": [
								"{{v}}",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"123456\",\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"role\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}:{{port}}/{{v}}/auth/register",
							"host": [
								"{{url}}"
							],
							"port": "{{port}}",
							"path": [
								"{{v}}",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"123456\",\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"bio\" : \"From {{$randomCity}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}:{{port}}/{{v}}/users/2",
							"host": [
								"{{url}}"
							],
							"port": "{{port}}",
							"path": [
								"{{v}}",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "View Users",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}:{{port}}/{{v}}/users",
							"host": [
								"{{url}}"
							],
							"port": "{{port}}",
							"path": [
								"{{v}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "View User",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}:{{port}}/{{v}}/users/2",
							"host": [
								"{{url}}"
							],
							"port": "{{port}}",
							"path": [
								"{{v}}",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "View Me",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}:{{port}}/{{v}}/users/1",
							"host": [
								"{{url}}"
							],
							"port": "{{port}}",
							"path": [
								"{{v}}",
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}:{{port}}/{{v}}/user/3,4",
							"host": [
								"{{url}}"
							],
							"port": "{{port}}",
							"path": [
								"{{v}}",
								"user",
								"3,4"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Journal",
			"item": [
				{
					"name": "Add Journal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function getRandomInt(min, max) {",
									"    return Math.floor(Math.random() * (max - min + 1)) + min;",
									"}",
									"",
									"let currentDate = new Date();",
									"",
									"let pastDays = getRandomInt(1, 90);",
									"let startDate = new Date(currentDate.getTime());",
									"startDate.setDate(startDate.getDate() - pastDays);",
									"pm.environment.set(\"randomDatePast\", startDate.toISOString());",
									"",
									"let futureDays = getRandomInt(1, 90);",
									"let endDate = new Date(currentDate.getTime());",
									"endDate.setDate(endDate.getDate() + futureDays);",
									"pm.environment.set(\"randomDateFuture\", endDate.toISOString());",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{$randomCurrencyCode}}/{{$randomCurrencyCode}}\",\n    \"description\": \"{{$randomCurrencyName}}\",\n    \"createdAt\": \"{{now}}\",\n    \"startDate\": \"{{randomDatePast}}\",\n    \"endDate\": \"{{randomDateFuture}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}:{{port}}/{{v}}/journal",
							"host": [
								"{{url}}"
							],
							"port": "{{port}}",
							"path": [
								"{{v}}",
								"journal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete  Multiple Journals",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}:{{port}}/{{v}}/journal/1",
							"host": [
								"{{url}}"
							],
							"port": "{{port}}",
							"path": [
								"{{v}}",
								"journal",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "View Journals",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}:{{port}}/{{v}}/journals",
							"host": [
								"{{url}}"
							],
							"port": "{{port}}",
							"path": [
								"{{v}}",
								"journals"
							]
						}
					},
					"response": []
				},
				{
					"name": "View Journal",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}:{{port}}/{{v}}/journal/1",
							"host": [
								"{{url}}"
							],
							"port": "{{port}}",
							"path": [
								"{{v}}",
								"journal",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Journal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function getRandomInt(min, max) {",
									"    return Math.floor(Math.random() * (max - min + 1)) + min;",
									"}",
									"",
									"let currentDate = new Date();",
									"",
									"let pastDays = getRandomInt(1, 90);",
									"let startDate = new Date(currentDate.getTime());",
									"startDate.setDate(startDate.getDate() - pastDays);",
									"pm.environment.set(\"randomDatePast\", startDate.toISOString());",
									"",
									"let futureDays = getRandomInt(1, 90);",
									"let endDate = new Date(currentDate.getTime());",
									"endDate.setDate(endDate.getDate() + futureDays);",
									"pm.environment.set(\"randomDateFuture\", endDate.toISOString());",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{$randomCurrencyCode}}/{{$randomCurrencyCode}}\",\n    \"description\": \"{{$randomCurrencyName}}\",\n    \"startDate\": \"{{$isoTimestamp}}\",\n    \"endDate\": \"{{$isoTimestamp}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}:{{port}}/{{v}}/journal/1",
							"host": [
								"{{url}}"
							],
							"port": "{{port}}",
							"path": [
								"{{v}}",
								"journal",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Trade",
			"item": [
				{
					"name": "Add Trade",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function getRandomInt(min, max) {",
									"    return Math.floor(Math.random() * (max - min + 1)) + min;",
									"}",
									"",
									"let currentDate = new Date();",
									"",
									"let pastDays = getRandomInt(1, 90);",
									"let startDate = new Date(currentDate.getTime());",
									"startDate.setDate(startDate.getDate() - pastDays);",
									"pm.environment.set(\"randomDatePast\", startDate.toISOString());",
									"",
									"let futureDays = getRandomInt(1, 90);",
									"let endDate = new Date(currentDate.getTime());",
									"endDate.setDate(endDate.getDate() + futureDays);",
									"pm.environment.set(\"randomDateFuture\", endDate.toISOString());",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"timeExecuted\": \"{{$randomDatePast}}\",\n    \"market\": \"Forex\",\n    \"stopLoss\": {{$randomPrice}},\n    \"entryPrice\": {{$randomPrice}},\n    \"exitPrice\": {{$randomPrice}},\n    \"journal\": 1,\n    \"quantity\": {{$randomInt}},\n    \"direction\": \"Short\",\n    \"baseInstrument\": \"{{$randomCurrencyCode}}\",\n    \"quoteInstrument\": \"{{$randomCurrencyCode}}\",\n    \"takeProfit\": {{$randomPrice}},\n    \"comments\": \"Sacrificed all of my {{$randomBankAccountName}} balance.\",\n    \"createdBy\": \"Postman\",\n    \"strategy\": \"{{$randomBs}}\",\n    \"timeClosed\": \"{{$randomDateFuture}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}:{{port}}/{{v}}/trade",
							"host": [
								"{{url}}"
							],
							"port": "{{port}}",
							"path": [
								"{{v}}",
								"trade"
							]
						}
					},
					"response": []
				},
				{
					"name": "View Trades",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}:{{port}}/{{v}}/trades",
							"host": [
								"{{url}}"
							],
							"port": "{{port}}",
							"path": [
								"{{v}}",
								"trades"
							]
						}
					},
					"response": []
				},
				{
					"name": "View Trade",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}:{{port}}/{{v}}/trade/2",
							"host": [
								"{{url}}"
							],
							"port": "{{port}}",
							"path": [
								"{{v}}",
								"trade",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Trade",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function getRandomInt(min, max) {",
									"    return Math.floor(Math.random() * (max - min + 1)) + min;",
									"}",
									"",
									"let currentDate = new Date();",
									"",
									"let pastDays = getRandomInt(1, 90);",
									"let startDate = new Date(currentDate.getTime());",
									"startDate.setDate(startDate.getDate() - pastDays);",
									"pm.environment.set(\"randomDatePast\", startDate.toISOString());",
									"",
									"let futureDays = getRandomInt(1, 90);",
									"let endDate = new Date(currentDate.getTime());",
									"endDate.setDate(endDate.getDate() + futureDays);",
									"pm.environment.set(\"randomDateFuture\", endDate.toISOString());",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"timeExecuted\": \"{{$isoTimestamp}}\",\n    \"market\": \"Forex\",\n    \"stopLoss\": {{$randomPrice}},\n    \"entryPrice\": {{$randomPrice}},\n    \"exitPrice\": {{$randomPrice}},\n    \"journal\": 1,\n    \"quantity\": {{$randomPrice}},\n    \"outcome\": \"Loss\",\n    \"direction\": \"Short\",\n    \"baseInstrument\": \"{{$randomCurrencyCode}}\",\n    \"quoteInstrument\": \"{{$randomCurrencyCode}}\",\n    \"takeProfit\": {{$randomPrice}},\n    \"comments\": \"Sacrificed all of my {{$randomBankAccountName}} balance.\",\n    \"strategy\": \"RSI\",\n    \"timeClosed\": \"{{$isoTimestamp}}\",\n    \"createdBy\": \"Postman\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}:{{port}}/{{v}}/trade/7",
							"host": [
								"{{url}}"
							],
							"port": "{{port}}",
							"path": [
								"{{v}}",
								"trade",
								"7"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete  Multiple Trades",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}:{{port}}/v1/trade/2,3",
							"host": [
								"{{url}}"
							],
							"port": "{{port}}",
							"path": [
								"v1",
								"trade",
								"2,3"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}